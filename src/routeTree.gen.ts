/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SettingsIndexImport } from './routes/settings/index'
import { Route as LeaderboardIndexImport } from './routes/leaderboard/index'
import { Route as FitnessIndexImport } from './routes/fitness/index'
import { Route as FinancesIndexImport } from './routes/finances/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as AcademicsIndexImport } from './routes/academics/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsIndexRoute = SettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRoute,
} as any)

const LeaderboardIndexRoute = LeaderboardIndexImport.update({
  id: '/leaderboard/',
  path: '/leaderboard/',
  getParentRoute: () => rootRoute,
} as any)

const FitnessIndexRoute = FitnessIndexImport.update({
  id: '/fitness/',
  path: '/fitness/',
  getParentRoute: () => rootRoute,
} as any)

const FinancesIndexRoute = FinancesIndexImport.update({
  id: '/finances/',
  path: '/finances/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const AcademicsIndexRoute = AcademicsIndexImport.update({
  id: '/academics/',
  path: '/academics/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/academics/': {
      id: '/academics/'
      path: '/academics'
      fullPath: '/academics'
      preLoaderRoute: typeof AcademicsIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/finances/': {
      id: '/finances/'
      path: '/finances'
      fullPath: '/finances'
      preLoaderRoute: typeof FinancesIndexImport
      parentRoute: typeof rootRoute
    }
    '/fitness/': {
      id: '/fitness/'
      path: '/fitness'
      fullPath: '/fitness'
      preLoaderRoute: typeof FitnessIndexImport
      parentRoute: typeof rootRoute
    }
    '/leaderboard/': {
      id: '/leaderboard/'
      path: '/leaderboard'
      fullPath: '/leaderboard'
      preLoaderRoute: typeof LeaderboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/academics': typeof AcademicsIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/finances': typeof FinancesIndexRoute
  '/fitness': typeof FitnessIndexRoute
  '/leaderboard': typeof LeaderboardIndexRoute
  '/settings': typeof SettingsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/academics': typeof AcademicsIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/finances': typeof FinancesIndexRoute
  '/fitness': typeof FitnessIndexRoute
  '/leaderboard': typeof LeaderboardIndexRoute
  '/settings': typeof SettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/academics/': typeof AcademicsIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/finances/': typeof FinancesIndexRoute
  '/fitness/': typeof FitnessIndexRoute
  '/leaderboard/': typeof LeaderboardIndexRoute
  '/settings/': typeof SettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/academics'
    | '/dashboard'
    | '/finances'
    | '/fitness'
    | '/leaderboard'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/academics'
    | '/dashboard'
    | '/finances'
    | '/fitness'
    | '/leaderboard'
    | '/settings'
  id:
    | '__root__'
    | '/'
    | '/academics/'
    | '/dashboard/'
    | '/finances/'
    | '/fitness/'
    | '/leaderboard/'
    | '/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AcademicsIndexRoute: typeof AcademicsIndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  FinancesIndexRoute: typeof FinancesIndexRoute
  FitnessIndexRoute: typeof FitnessIndexRoute
  LeaderboardIndexRoute: typeof LeaderboardIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AcademicsIndexRoute: AcademicsIndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  FinancesIndexRoute: FinancesIndexRoute,
  FitnessIndexRoute: FitnessIndexRoute,
  LeaderboardIndexRoute: LeaderboardIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/academics/",
        "/dashboard/",
        "/finances/",
        "/fitness/",
        "/leaderboard/",
        "/settings/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/academics/": {
      "filePath": "academics/index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/finances/": {
      "filePath": "finances/index.tsx"
    },
    "/fitness/": {
      "filePath": "fitness/index.tsx"
    },
    "/leaderboard/": {
      "filePath": "leaderboard/index.tsx"
    },
    "/settings/": {
      "filePath": "settings/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
